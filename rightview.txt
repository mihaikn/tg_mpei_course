https://leetcode.com/problems/binary-tree-right-side-view/
class Solution {
public:
	vector <int> result;
	void dfs(TreeNode* root, int depth) {
		// if we visit right child first, then the first node we reach on this depth 
		// is the rightmost node on this depth
		if (result.size() == depth)
			result.push_back(root->val);
		if (root->right) dfs(root->right, depth + 1);
		if (root->left) dfs(root->left, depth + 1);
	}
	vector <int> rightSideView(TreeNode* root) {
		if (!root) return result;
		dfs(root, 0);
		return result;
	}
};