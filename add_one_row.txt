https://leetcode.com/problems/add-one-row-to-tree/
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int v, int d) {
        if(d == 1) {
        	TreeNode *newRoot = new TreeNode(v);
        	newRoot->left = root;
        	return newRoot;
		}
		
		pair<TreeNode*, TreeNode*> children; // {LeftChild, RightChild}
		queue<TreeNode*> q;
		q.push(root);
		int currentLevel = 1;
		while(!q.empty()) {
			int sz = q.size();
			while(sz--) {
				TreeNode* current = q.front();
				q.pop();
				if(currentLevel == d-1) {
					if(current->left) {
						children.first = current->left;	
						current->left = NULL;
						current->left = new TreeNode(v);
						current->left->left = children.first;
					}
					else current->left = new TreeNode(v);
					if(current->right) {
						children.second = current->right;	
						current->right = NULL;
						current->right  = new TreeNode(v);
						current->right->right = children.second;
					}
					else current->right  = new TreeNode(v);
				}
				if(current->left) q.push(current->left);
				if(current->right) q.push(current->right);
			}
			currentLevel++;
		}
		return root;
    }
};